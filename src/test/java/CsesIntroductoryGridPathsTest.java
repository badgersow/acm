import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class CsesIntroductoryGridPathsTest extends AcmTest {

    private CsesIntroductoryGridPaths service;

    @BeforeEach
    public void setup() {
        service = new CsesIntroductoryGridPaths();
    }

    @Override
    void processInput() throws Exception {
        service.solve();
    }

    @Test
    public void singular() {
        compare("DRURRRRRDDDLUULDDDLDRRURDDLLLLLURULURRUULDLLDDDD", "1");
    }

    @Test
    public void fast1() {
        compare("DRURR???????UULDDDLDRRURD???????RULURRUUL?????DD", "1");
    }

    @Test
    public void fast2() {
        compare("DRURRRRRD?????LDDDLDRRURD?????LURUL????????LDDDD", "1");
    }

    @Test
    public void sample() {
        compare("??????R??????U??????????????????????????LD????D?", "201");
    }

    @Test
    public void something1() {
        compare("????????????????????????L???????????????????????", "27735");
    }

    @Test
    public void something2() {
        compare("RR??????????????????????????????????????????????", "34268");
    }

    @Test
    public void total() {
        compare("????????????????????????????????????????????????", "88418");
    }

    @Test
    public void encoding() {
        CsesIntroductoryGridPaths service = new CsesIntroductoryGridPaths();

        final long mask = 562949953320812L;
        final long i = 1;
        final long j = 5;
        final long position = 41;

        final long code = service.code(mask, i, j, position);
        assertThat(service.mask(code)).isEqualTo(mask);
        assertThat(service.i(code)).isEqualTo(i);
        assertThat(service.j(code)).isEqualTo(j);
        assertThat(service.position(code)).isEqualTo(position);
    }
}